<!-- src/components/Header.astro -->
---
import { getRelativeLocaleUrl } from 'astro:i18n';
import LanguageSelect from '@astrojs/starlight/components/LanguageSelect.astro';
import ThemeSelect from '@astrojs/starlight/components/ThemeSelect.astro';
---

<header class="sticky top-0 z-40 w-full border-b dark:border-gray-800 border-gray-200 bg-white/90 dark:bg-gray-900/90 backdrop-blur">
  <div class="container mx-auto px-4 max-w-6xl">
    <div class="flex h-16 items-center justify-between">
      <!-- Logo section unchanged -->
      <div class="flex items-center">
        <a href="/" class="flex items-center">
          <img src="/src/assets/img/onetime-logo-v3-xs.png" alt="Onetime Secret" class="h-8">
          <span class="ml-2 text-xl font-brand font-medium hidden sm:block dark:text-white text-gray-900">Onetime Secret</span>
        </a>
      </div>

      <!-- Navigation unchanged -->
      <nav class="hidden md:flex items-center space-x-6">
        <a href={getRelativeLocaleUrl('en', 'introduction')} class="text-gray-700 dark:text-gray-300 hover:text-brand-500 font-medium">Docs</a>
        <a href={getRelativeLocaleUrl('en', 'custom-domains')} class="text-gray-700 dark:text-gray-300 hover:text-brand-500 font-medium">Custom Domains</a>
        <a href={getRelativeLocaleUrl('en', 'rest-api')} class="text-gray-700 dark:text-gray-300 hover:text-brand-500 font-medium">API</a>
        <a href="https://github.com/onetimesecret/onetimesecret" class="text-gray-700 dark:text-gray-300 hover:text-brand-500 font-medium">GitHub</a>
      </nav>

      <!-- Right controls with properly imported components -->
      <div class="flex items-center space-x-4">
        <!-- Properly imported Starlight components -->
        <div class="language-select-wrapper">
          <LanguageSelect />
        </div>
        <div class="theme-select-wrapper">
          <ThemeSelect />
        </div>

        <!-- Mobile menu button unchanged -->
        <button type="button" id="mobile-menu-button" class="md:hidden inline-flex items-center justify-center rounded-md p-2 text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-800">
          <span class="sr-only">Open main menu</span>
          <svg class="h-6 w-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
          </svg>
        </button>
      </div>
    </div>
  </div>

  <!-- Mobile menu - hidden by default -->
  <div class="md:hidden hidden" id="mobile-menu">
    <div class="space-y-1 px-4 py-2 bg-white dark:bg-gray-900 border-t border-gray-200 dark:border-gray-800">
      <a href={getRelativeLocaleUrl('en', 'introduction')} class="block py-2 text-gray-700 dark:text-gray-300 hover:text-brand-500 font-medium">Docs</a>
      <a href={getRelativeLocaleUrl('en', 'custom-domains')} class="block py-2 text-gray-700 dark:text-gray-300 hover:text-brand-500 font-medium">Custom Domains</a>
      <a href={getRelativeLocaleUrl('en', 'rest-api')} class="block py-2 text-gray-700 dark:text-gray-300 hover:text-brand-500 font-medium">API</a>
      <a href="https://github.com/onetimesecret/onetimesecret" class="block py-2 text-gray-700 dark:text-gray-300 hover:text-brand-500 font-medium">GitHub</a>
    </div>
  </div>
</header>

<style>
  /* Add styling to properly integrate Starlight components */
  .language-select-wrapper, .theme-select-wrapper {
    display: flex;
    align-items: center;
  }

  /* Ensure Starlight's default styles don't conflict with your custom styling */
  :global(.language-select-wrapper select),
  :global(.theme-select-wrapper select) {
    border-radius: 0.375rem;
    background-color: transparent;
    padding: 0.375rem 2rem 0.375rem 2.25rem;
    font-size: 0.875rem;
  }

  :global(.dark .language-select-wrapper select),
  :global(.dark .theme-select-wrapper select) {
    color: theme('colors.gray.300');
    border-color: theme('colors.gray.700');
  }
</style>

<script>
  // Mobile menu toggle code unchanged
  document.getElementById('mobile-menu-button')?.addEventListener('click', () => {
    const mobileMenu = document.getElementById('mobile-menu');
    if (mobileMenu?.classList.contains('hidden')) {
      mobileMenu.classList.remove('hidden');
    } else {
      mobileMenu?.classList.add('hidden');
    }
  });
</script>
